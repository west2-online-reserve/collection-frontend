<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>

<body>
  <h2>元字符</h2>
  <p>普通字符只能匹配字符串中与它们相同的字符</p>
  <p>元字符是特殊字符,具有特殊含义,极大提高了灵活性</p>
  <p>如 abcdef 写作 [a-f]</p>

  <h3>分类</h3>
  <h5>边界符</h5>
  <h5>量词</h5>
  <h5>字符类</h5>

  <h3>1.边界符</h3>
  <p>设定字符的位置</p>
  <p>^表开始</p>
  <p>$表结束</p>
  <script>
    console.log(/哈/.test('哈哈'));//true
    console.log(/哈/.test('二哈'));//true
    console.log(/^哈/.test('哈哈'));//必须以'哈'开头//true
    console.log(/^哈/.test('二哈'));//必须以'哈'开头//false
    console.log(/^哈$/.test('哈'));//精确匹配,要求完全一致//true
    console.log(/^哈$/.test('哈哈'));//精确匹配,要求完全一致//false
  </script>

  <h3>2.量词</h3>
  <p>设定模式出现的次数</p>
  <p>* 表重复 0+ 次</p>
  <p>+ 表重复 1+ 次</p>
  <p>? 表重复 0或1 次</p>
  <p>{n} 表重复 n 次</p>
  <p>{n,} 表重复 n+ 次</p>
  <p>{n,m} 表重复 n~m 次</p>
  <script>
    console.log('-----------------------------------');
    console.log(/^哈+$/.test('哈哈'));//限定字符,但数量有更多选择//true
    console.log(/^哈{2,5}$/.test('哈哈'));//true
    console.log(/^哈{2,5}$/.test('哈哈哈'));//true
    console.log(/^哈{2,5}$/.test('哈哈哈哈'));//true
    console.log(/^哈{2,5}$/.test('哈哈哈哈哈'));//true
    console.log(/^哈{2,5}$/.test('哈哈哈哈哈哈'));//false
  </script>

  <h3>3.字符类</h3>
  <h4>(1) []匹配字符集合</h4>

  <p> 在 [] 内加 ^ 表示取反</p>

  <h4>(2) . 表示除了换行符之外的任何单个字符</h4>

  <h4>(3) 预定义类</h4>
  <p>\d [0-9]</p>
  <p>\D [^0-9]</p>
  <p>\w [A-Za-z0-9]</p>
  <p>\W [^A-Za-z0-9]</p>
  <p>\s [\t\r\n\v\f] 包括水平制表符,回车符,换行符,垂直制表符,换页符</p>
  <p>\S [^\t\r\n\v\f]</p>

  <script>
    console.log('-----------------------------------');
    //只选包含[]中的一个,
    console.log(/^[abcde]$/.test('a'));//true
    console.log(/^[abcde]$/.test('b'));//true
    console.log(/^[abcde]$/.test('c'));//true
    console.log(/^[abcde]$/.test('cc'));//false
    console.log(/^[abcde]$/.test('ab'));//false
    console.log(/^[abcde]{2}$/.test('ab'));//true
    //[n-m]用以表范围
    console.log(/^[a-e]{2}$/.test('ab'));//true
    console.log(/^[a-e0-9A-Z]{2}$/.test('ab'));//true
    console.log(/^[^a-e0-9A-Z]{2}$/.test('ab'));//false
    console.log(/^[^a-e]{2}$/.test('ff'));//true



    // console.log('123123' + /^[1-9][0-9]{4}/.test(prompt('')));
    //最后要求8位
  </script>


</body>

</html>